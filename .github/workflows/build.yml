# This name is also shown in the status badge.
name: Build and Release Shopkeepers

on:
  schedule:
    - cron: '0 */12 * * *'   #每12小时一次
  push:
    branches: [main]
  pull_request:
    branches: [main]


jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # 确保有写入权限，用于创建 Release 和标签

    steps:
      # 步骤1: 检出当前仓库（工作流仓库）
      - name: Checkout Workflow Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      # 步骤2: 克隆 Shopkeepers 仓库
      - name: Clone Shopkeepers Repository
        run: |
          git clone https://github.com/Shopkeepers/Shopkeepers.git ./shopkeepers-source
          cd ./shopkeepers-source
          # 如果需要特定分支，可以添加，例如：git checkout main
          echo "Shopkeepers repository cloned successfully"

      # 步骤3: 设置 JDK 21
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'zulu'

      # 步骤4: 缓存设置
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/*.gradle*', '**/libs.versions.toml', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-m2

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/libs.versions.toml', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      - name: Cache Jabba JDK installations
        uses: actions/cache@v4
        with:
          path: ~/.jabba
          key: ${{ runner.os }}-jabba-${{ hashFiles('**/*.sh') }}
          restore-keys: |
            ${{ runner.os }}-jabba

      - name: Cache SonarCloud packages
        if: github.event_name != 'pull_request'
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar

      # 步骤5: 构建 Shopkeepers
      - name: Build Shopkeepers
        run: |
          cd ./shopkeepers-source
          chmod +x ./build.sh
          ./build.sh
          echo "Build completed"

      # 步骤6: 设置日期作为标签名
      - name: Set date as tag name
        id: set_tag
        run: |
          DATE=$(date +'%Y%m%d-%H%M%S')
          echo "TAG_NAME=shopkeepers-build-$DATE" >> $GITHUB_ENV
          echo "Generated Tag: ${{ env.TAG_NAME }}"

      # 步骤7: 验证构建产物
      - name: Verify Artifacts
        run: |
          echo "Checking build artifacts in shopkeepers-source/build/"
          ls -la ./shopkeepers-source/build/
          
          # 检查构建产物是否存在
          if ! ls ./shopkeepers-source/build/*.jar 1> /dev/null 2>&1; then
            echo "::error::No JAR files found in shopkeepers-source/build/"
            exit 1
          fi

          echo "Shopkeepers build artifacts verified successfully"

      # 步骤8: 上传构建产物到 Workflow Artifacts
      - name: Upload Build Artifacts to Workflow
        uses: actions/upload-artifact@v4
        with:
          name: Shopkeepers Artifacts
          path: shopkeepers-source/build/*.jar
          retention-days: 30

      # 步骤9: 创建 Git 标签 (仅在非PR事件时执行)
      - name: Create Git Tag
        if: github.event_name != 'pull_request'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag -a "${{ env.TAG_NAME }}" -m "Automated Shopkeepers build ${{ env.TAG_NAME }}"
          git push origin "${{ env.TAG_NAME }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 步骤10: 创建 Release (仅在非PR事件时执行)
      - name: Create Release
        if: github.event_name != 'pull_request'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          name: "Shopkeepers Build ${{ env.TAG_NAME }}"
          body: |
            Automated build of Shopkeepers
            - Build Date: ${{ env.TAG_NAME }}
            - Triggered by: ${{ github.event_name }}
            - Branch: ${{ github.ref }}
            - Commit: ${{ github.sha }}
          files: shopkeepers-source/build/*.jar
          prerelease: false
          draft: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
